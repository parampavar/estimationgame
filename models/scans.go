// DON'T EDIT *** generated by scaneo *** DON'T EDIT //

package models

import "database/sql"

func ScanUser(r *sql.Row) (User, error) {
	var s User
	if err := r.Scan(
		&s.id,
		&s.idp_user_id,
		&s.name,
		&s.last_updated,
		&s.status,
		&s.user_attributes,
	); err != nil {
		return User{}, err
	}
	return s, nil
}

func ScanUsers(rs *sql.Rows) ([]User, error) {
	structs := make([]User, 0, 16)
	var err error
	for rs.Next() {
		var s User
		if err = rs.Scan(
			&s.id,
			&s.idp_user_id,
			&s.name,
			&s.last_updated,
			&s.status,
			&s.user_attributes,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanToy(r *sql.Row) (Toy, error) {
	var s Toy
	if err := r.Scan(
		&s.id,
		&s.name,
		&s.isActive,
	); err != nil {
		return Toy{}, err
	}
	return s, nil
}

func ScanToys(rs *sql.Rows) ([]Toy, error) {
	structs := make([]Toy, 0, 16)
	var err error
	for rs.Next() {
		var s Toy
		if err = rs.Scan(
			&s.id,
			&s.name,
			&s.isActive,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanTool(r *sql.Row) (Tool, error) {
	var s Tool
	if err := r.Scan(
		&s.id,
		&s.name,
		&s.isActive,
	); err != nil {
		return Tool{}, err
	}
	return s, nil
}

func ScanTools(rs *sql.Rows) ([]Tool, error) {
	structs := make([]Tool, 0, 16)
	var err error
	for rs.Next() {
		var s Tool
		if err = rs.Scan(
			&s.id,
			&s.name,
			&s.isActive,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanEstimate(r *sql.Row) (Estimate, error) {
	var s Estimate
	if err := r.Scan(
		&s.id,
		&s.userid,
		&s.toyid,
		&s.value,
		&s.createdDate,
	); err != nil {
		return Estimate{}, err
	}
	return s, nil
}

func ScanEstimates(rs *sql.Rows) ([]Estimate, error) {
	structs := make([]Estimate, 0, 16)
	var err error
	for rs.Next() {
		var s Estimate
		if err = rs.Scan(
			&s.id,
			&s.userid,
			&s.toyid,
			&s.value,
			&s.createdDate,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

